%select
  - if @report
    %option{value: @report.id}= @report.name
  - else
    %option{value: '', data: ''} Report Select
  - @reports.each do |report|
    %option{value: report.id}= report.name

#preview

= form_with(model: @instruction) do |form|
  = form.hidden_field :header_id, value: @report.header.id || nil
  .field
    = form.label :structure
    = form.select :structure, ['row', 'row (reuse retailer if none)']

  .field
    = form.label :retailer
    = form.number_field :retailer

  .field
    = form.label :brand
    = form.number_field :brand

  .field
    = form.label :street1
    = form.number_field :street1

  .field
    = form.label :street2
    = form.number_field :street2

  .field
    = form.label :city
    = form.number_field :city

  .field
    = form.label :state
    = form.number_field :state

  .field
    = form.label :postal
    = form.number_field :postal

  .field
    = form.label :phone
    = form.number_field :phone

  .field
    = form.label :website
    = form.number_field :website

  .field
    = form.label :premise
    = form.number_field :premise

  .field
    = form.label :chain
    = form.text_field :chain

  .field
    = form.label :condition, onclick: 'toggle_condition();'
    .invis
      %p Conditionally apply rows. Enter ruby code that will be executed.
      %p The last line must evaluate to true or false
      %p You have access to a `head` array of all the columns
      %p You have access to a `row` array of all the columns
      %p You have access to a `date` ruby object that comes from the container
      %pre
        Example: Parse this row if the column contains a date that is in the containers month
        col = head.each_index.find { |i| Date.parse(raw_head[i]).month == date.month rescue false };
        row[col]&.to_i > 0 resuce false
      %p
        Row valid if
        = form.text_area :condition

  = form.submit 'Create'

:javascript
  async function report_changed() {
    const container = document.getElementById('preview');
    container.innerHTML = '';

    const select = document.getElementsByTagName('select')[0];
    const report_id = select.value;
    if (!report_id) { return; }

    const request = await fetch(`/reports/${report_id}/partial-rows`, { method: 'GET' });
    const html = await request.text();
    container.innerHTML = html;
    return;
  }

  function toggle_condition() {
    const container = document.getElementsByTagName('pre')[0].parentElement;
    container.classList.toggle('invis');
    return;
  }

  document.getElementsByTagName('select')[0].onclick = report_changed;
  report_changed();
