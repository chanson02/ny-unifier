%select
  - if @report
    %option{value: @report.raw_head, data: @report.header.id}= @report.name
  - else
    %option{value: '', data: ''} Report Select
  - @reports.each do |report|
    %option{value: report.raw_head, data: report.header.id}= report.name

%table{:border=>1}
  %thead
    %tr
  %tbody
    %tr

= form_with(model: @instruction) do |form|
  = form.hidden_field :header_id
  .field
    = form.label :structure
    = form.select :structure, ['row']

  .field
    = form.label :retailer
    = form.number_field :retailer

  .field
    = form.label :brand
    = form.number_field :brand

  .field
    = form.label :street1
    = form.number_field :street1

  .field
    = form.label :street2
    = form.number_field :street2

  .field
    = form.label :city
    = form.number_field :city

  .field
    = form.label :state
    = form.number_field :state

  .field
    = form.label :postal
    = form.number_field :postal

  .field
    = form.label :phone
    = form.number_field :phone

  .field
    = form.label :website
    = form.number_field :website

  .field
    = form.label :premise
    = form.number_field :premise

  .field
    = form.label :chain
    = form.text_field :chain

  .field
    = form.label :condition, onclick: 'toggle_condition();'
    .invis
      %p Conditionally apply rows. Enter ruby code that will be executed.
      %p The last line must evaluate to true or false
      %p You have access to a `head` array of all the columns
      %p You have access to a `row` array of all the columns
      %p You have access to a `date` ruby object that comes from the container
      %pre
        Example: Parse this row if the column contains a date that is in the containers month
        col = head.each_index.find { |i| Date.parse(raw_head[i]).month == date.month rescue false };
        row[col]&.to_i > 0 resuce false
      %p
        Row valid if
        = form.text_area :condition

  = form.submit 'Create'

:javascript
  function clear_table() {
    document.getElementsByTagName('thead')[0].children[0].innerHTML = '';
    document.getElementsByTagName('tbody')[0].children[0].innerHTML = '';
    return;
  }

  function report_changed() {
    clear_table();
    const select = document.getElementsByTagName('select')[0];
    const head_id = select.selectedOptions[0].getAttribute('data');
    document.getElementById('instruction_header_id').value = head_id;

    const head = JSON.parse(select.value);
    const table = document.getElementsByTagName('table')[0];

    for (let i=0; i<head.length; i++) {
      const ndx = document.createElement('td');
      ndx.innerHTML = i;

      const col = document.createElement('td');
      col.innerHTML = head[i];

      table.children[0].children[0].appendChild(ndx);
      table.children[1].children[0].appendChild(col);
    }
    return;
  }

  function toggle_condition() {
    const container = document.getElementsByTagName('pre')[0].parentElement;
    container.classList.toggle('invis');
    return;
  }

  document.getElementsByTagName('select')[0].onclick = report_changed;
  report_changed();
